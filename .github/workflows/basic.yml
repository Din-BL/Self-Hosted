name: Deploy to EC2 IIS
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
    
    - name: Connect to EC2 and create folder
      run: |
        # Replace these with your actual values
        $ec2Host = "51.16.37.66"
        $username = "winrmuser"
        $password = "WinRMPass123!"
        
        # Create credential object
        $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential($username, $securePassword)
        
        # Connect to EC2 and create a basic folder in IIS
        Invoke-Command -ComputerName $ec2Host -Credential $credential -ScriptBlock {
          # Import IIS module
          Import-Module WebAdministration
          
          # Create a new folder with current date and time
          $currentDateTime = Get-Date -Format "yyyyMMdd_HHmmss"
          $folderPath = "C:\inetpub\wwwroot\active_$currentDateTime"
          
          if (!(Test-Path $folderPath)) {
            New-Item -ItemType Directory -Path $folderPath -Force
            Write-Host "Created folder: $folderPath"
          } else {
            Write-Host "Folder already exists: $folderPath"
          }
          
          # Copy required files and folders to the active folder
          $sourceItems = @(
            "C:\inetpub\wwwroot\bin",
            "C:\inetpub\wwwroot\web.config",
            "C:\inetpub\wwwroot\log4net.config",
            "C:\inetpub\wwwroot\appsettings.json"
          )
          
          foreach ($item in $sourceItems) {
            if (Test-Path $item) {
              Copy-Item -Path $item -Destination $folderPath -Recurse -Force
              Write-Host "Copied: $item to $folderPath"
            } else {
              Write-Host "Item not found: $item"
            }
          }
          
          # Copy the same files to the waiting folder
          $waitingPath = "C:\inetpub\wwwroot\waiting"
          foreach ($item in $sourceItems) {
            if (Test-Path $item) {
              Copy-Item -Path $item -Destination $waitingPath -Recurse -Force
              Write-Host "Copied: $item to $waitingPath"
            } else {
              Write-Host "Item not found: $item"
            }
          }
          
          # List contents to verify
          Get-ChildItem $folderPath
        }
      shell: powershell